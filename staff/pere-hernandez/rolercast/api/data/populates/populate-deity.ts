import mongoose from 'mongoose'

import { Deity } from '../models'

mongoose.connect('mongodb://localhost:27017/rolercast')
    .then(() => Deity.deleteMany())
        .then(() => 
            Promise.all([
                Deity.create({ name: 'Selûne', description: 'The goddess of the moon, chaotic good. Associated domain(s): Knowledge, Life, Twilight.\n The Lady of Silver presides over the moon, stars, and navigation. Her power over the heavens is constantly challenged by her sister Shar, who seeks to plunge the world into eternal shadow. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Helm', description: "The god of protection and guardians, lawful neutral. Associated domain(s): Life, Light, Twilight.\n The Watcher is an eternal sentry among the gods, representing guardians across the planes. After more than a century of fading worship, Helm's power was restored with the Second Sundering. This deity can be selected by player Cleric." }),
                Deity.create({ name: 'Kelemvor', description: "The god of the dead, lawful neutral. Associated domain(s): Death, Grave.\n Fair but distant, Kelemvor guides the dead to their appropriate plane in the afterlife. His clergy provides last rites across Faerûn, but also destroy undead that have escaped Kelemvor's judgement. This deity can be selected by player Cleric." }),
                Deity.create({ name: 'Yondalla', description: 'The halfling goddess of fertility and protection. Associated domain(s): Life, Twilight. \nAs the mother of the halfling pantheon, Yondalla is known for her kindness and open mind, encouraging her followers to protect the home, hearth, and nature. This deity can be selected by player Cleric'}),
                Deity.create({ name: 'Eilistraee', description: "The drow goddess of beauty and freedom, chaotic good. Associated domain(s): Light, Nature, Life. \nEilistraee is the goddess of good-aligned drow, beauty, song, and freedom. The Dark Maiden desires balance between all races, and struggles against her mother Lolth's corrupt aims. This deity can be selected by player Cleric." }),
                Deity.create({ name: 'Mielikki', description: 'The goddess of forests, neutral good. Associated domain(s): Nature. \nMielikki is the goddess of forests and the creatures that live within them. She is a remote and spiritual deity, often spoken of in but the quietest of forests. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Ilmater', description: 'The god of endurance and suffering, lawful good. Associated domain(s): Life, Twilight. \nThe Crying God protects the oppressed and persecuted. His clergy is sworn to alleviate suffering, even if that means taking on that pain personally. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Moradin', description: 'The dwarf god of creation, lawful good. Associated domain(s): Forge, Knowledge. \nThe All-Hammer is a dwarven god worshipped by smiths, artisans, and miners alike. He and Laduguer are constantly at odds. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Tiamat', description: 'The dragon goddess of greed, Lawful Evil and Chaotic Evil. Associated domain(s): Trickery. \nTiamat the Many-Mawed is a roiling mass of avarice and hate currently trapped within the Nine Hells. The dragon god of greed eternally plots her escape, as do her many fanatics in the world of Toril. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Lathander', description: 'The god of birth, dawn and renewal, neutral good. Associated domain(s): Life, Light. \nThe Morninglord is the god of the dawn and spring, of birth and beginnings. He is invoked to christen both new ventures and new life. His followers embrace growth and renewal, and despise the undead. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Laduguer', description: "Laduguer 'The Exile' is the tyrannical patron of the Duergar, Lawful Evil. Associated domain(s): Arcana, Death. \nHis clerics are the unquestioned rulers of duergar society, enforcing cold and callous behaviour among his worshippers." }),
                Deity.create({ name: 'Tempus', description: 'The god of war, neutral. Associated domain(s): War. \nTempus is the Lord of Battles, overseeing war and its soldiers. He is the embodiment of honorable combat, and condemns needless bloodlust. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Mystra', description: 'The elf god of art and magic, chaotic good. Associated domain(s): Arcana, Life, Light and War. \nCreator of the elves, Corellon Larethian oversees the elven pantheon as a whole, providing blessings to those who study art, magic, and nature. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Bahamut', description: 'The dragon god of justice, lawful good, Associated domain(s): Life, War. \nThe Angel of the Seven Heavens is the dragon god of justice. His ideal of mercy and just authority keep him locked in an inexorable rivalry with his sister, Tiamat. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Talos', description: 'The god of storms and destruction, chaotic evil. Associated domain(s): Tempest. \nTalos represents the uncaring and destructive force of nature. His followers see life as a set of random effects in a sea of chaos, and take what they can - for who can say when Talos will strike next? This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Tyr', description: 'The god of law and justice, lawful good. Associated domain(s): Order, War. \nThe Blind God rules over law and justice, encouraging valiant acts from his followers and relentlessly pursuing oathbreakers. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Oghma', description: 'The god of knowledge, neutral. Associated domain(s): Knowledge. \nOghma is the god of inspiration and invention, sharing knowledge with the world through his bards and clerics. Unlike many other deities, Oghma accepts all moral alignments into his clergy. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Garl Glittergold', description: 'The gnome god of luck, protection and trickery, lawful good. Associated domain(s): Trickery. \nThe Watchful Protector is the king of gnomish gods - a deity of humour, gemcutting, protection, and trickery. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Gruumsh', description: "The patron deity of orcs and head of the orc pantheon, chaotic evil. Associated domain(s): Tempest, War. \nThe One-Eye is the orcs' patron deity - a god of war, conquest, and victory at all costs. He has led an ancient and immutable grudge against the elven pantheon since Corellon Larethian took his eye. This deity can be selected by player Cleric." }),
                Deity.create({ name: 'Tymora', description: 'The goddess of good fortune, chaotic good. Associated domain(s): Trickery. \nTymora is the bright-faced goddess of fortune, who favours those who gamble - and set out on adventure - with the utmost skill and daring. This deity can be selected by player Cleric.' }),
                Deity.create({ name: 'Lolth', description: 'The drow goddess of spiders, chaotic evil. Associated domain(s): Trickery, War. \nThe much-reviled matriarch of the drow pantheon, Lolth holds sway over spiders, the Underdark, and the wicked creatures of the Demonweb Pits. Her primary goal is to corrupt all drow, transforming them into heartless cultists. This deity can be selected by player Cleric, except for Seldarine Drow.' }),
                Deity.create({ name: 'Vlaakith', description: 'While not a god in the traditional sense, the Lich Queen is the sole respected leader of the githyanki. She encourages their worship and unquestioning devotion, essentially acting as a deity.' })
            ])
        )
        .then(() => mongoose.disconnect())
        .then(() => console.log('populated'))
        .catch(console.error)